! (C) Copyright 2022- ECMWF.
! (C) Copyright 2022- Meteo-France.
!
! This software is licensed under the terms of the Apache Licence Version 2.0
! which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
! In applying this licence, ECMWF does not waive the privileges and immunities
! granted to it by virtue of its status as an intergovernmental organisation
! nor does it submit to any jurisdiction.

MODULE FIELD_ASYNC_MODULE

$:offload_macros.runtime_api_import()
USE PARKIND1, ONLY : JPIM
USE, INTRINSIC :: ISO_C_BINDING
IMPLICIT NONE

TYPE ASYNC_STREAMS
  LOGICAL :: LCREATED = .FALSE.
#:if defined('WITH_HIC')
$:offload_macros.stream_decl(['STREAM'], indent=2)
#:else
  INTEGER(KIND=JPIM) :: STREAM = -1
#:endif
END TYPE

TYPE(ASYNC_STREAMS), ALLOCATABLE :: STREAMS(:)

CONTAINS

SUBROUTINE INIT_QUEUE (QUEUE)
USE FIELD_ABORT_MODULE, ONLY : FIELD_ABORT
USE FIELD_DEFAULTS_MODULE, ONLY : NUM_ASYNC_QUEUES

INTEGER(KIND=JPIM), INTENT(IN) :: QUEUE

IF (QUEUE > NUM_ASYNC_QUEUES) THEN
  CALL FIELD_ABORT("QUEUE LIMIT EXCEEDED, PLEASE INCREASE FIELD_DEFAULTS_MODULE:NUM_ASYNC_QUEUES")
ENDIF

IF (.NOT. ALLOCATED(STREAMS)) THEN
  ALLOCATE(STREAMS(NUM_ASYNC_QUEUES))
ENDIF

IF (.NOT. STREAMS(QUEUE)%LCREATED) THEN
$:offload_macros.create_stream(stream='STREAMS(QUEUE)%STREAM', queue='QUEUE', indent=2)
  STREAMS(QUEUE)%LCREATED = .TRUE.
ENDIF

END SUBROUTINE INIT_QUEUE

SUBROUTINE WAIT_FOR_ASYNC_QUEUE (QUEUE)

USE PARKIND1, ONLY : JPIM

INTEGER(KIND=JPIM), INTENT(IN) :: QUEUE
$:offload_macros.runtime_error_decl(symbols=['IRET'])
!Wait for all data transfer initiated on queue by the current thread
$:offload_macros.async_wait(stream='STREAMS(QUEUE)%STREAM', return_val='IRET')
END SUBROUTINE WAIT_FOR_ASYNC_QUEUE

END MODULE FIELD_ASYNC_MODULE
