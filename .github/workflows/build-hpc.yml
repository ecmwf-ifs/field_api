name: build-hpc

# Controls when the action will run
on:

  # Trigger the workflow on all pushes to main, except on tag creation
  push:
    branches:
    - main
    tags-ignore:
    - '**'

  # Trigger the workflow on all pull requests
  pull_request: ~

  # Allow workflow to be dispatched on demand
  workflow_dispatch: ~

  # Trigger after public PR approved for CI
  pull_request_target:
    types: [labeled]

jobs:
  ci-hpc:
    name: ci-hpc
    if: ${{ !github.event.pull_request.head.repo.fork && github.event.action != 'labeled' || github.event.label.name == 'approved-for-ci' }}

    strategy:
      fail-fast: false    # false: try to complete all jobs

      matrix:
        cuda: [False, True]
        name:
          - ac-gpu nvhpc

        include:
          - name: ac-gpu nvhpc
            site: ac-batch
            sbatch_options: |
              #SBATCH --time=00:20:00
              #SBATCH --nodes=1
              #SBATCH --ntasks=1
              #SBATCH --cpus-per-task=32
              #SBATCH --gpus-per-task=1
              #SBATCH --mem=100G
              #SBATCH --qos=dg

    runs-on: [self-hosted, linux, hpc]
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: ecmwf-actions/reusable-workflows/ci-hpc-generic@v2
        with:
          site: ${{ matrix.site }}
          troika_user: ${{ secrets.HPC_CI_SSH_USER }}
          sbatch_options: ${{ matrix.sbatch_options }}
          template_data: |
            modules:
              - cmake
              - ninja
              - ecbuild
              - prgenv/nvidia
              - python3
            cmake_options:
              - -DENABLE_ACC=ON
              - -DENABLE_CUDA=${{ matrix.cuda }}
              - -DENABLE_SINGLE_PRECISION=ON
              - -DENABLE_DOUBLE_PRECISION=ON
            dependencies:
              ecmwf/fckit:
                version: 0.13.0
                cmake_options:
                  - -DENABLE_TESTS=OFF
                  - -DENABLE_FCKIT_VENV=ON
              ecmwf-ifs/fiat:
                version: 1.4.1
                cmake_options:
                  - -DENABLE_SINGLE_PRECISION=ON
                  - -DENABLE_DOUBLE_PRECISION=ON
          template: |
            {% for module in modules %}
              module load {{module}}
            {% endfor %}
            BASEDIR=$PWD
            {% for name, options in dependencies.items() %}
                mkdir -p {{name}}
                pushd {{name}}
                git init
                git remote add origin ${{ github.server_url }}/{{name}}
                git fetch origin {{options['version']}}
                git reset --hard FETCH_HEAD
                cmake -G Ninja -S . -B build \
                  {% for name in dependencies %}
                    {% set org, proj = name.split('/') %}
                    -D{{proj}}_ROOT=$BASEDIR/{{name}}/installation \
                  {% endfor %}
                  {{ options['cmake_options']|join(' ') }}
                cmake --build build
                cmake --install build --prefix installation
                popd
            {% endfor %}
            REPO=${{ github.event.pull_request.head.repo.full_name || github.repository }}
            SHA=${{ github.event.pull_request.head.sha || github.sha }}
            mkdir -p $REPO
            pushd $REPO
            git init
            git remote add origin ${{ github.server_url }}/$REPO
            git fetch origin $SHA
            git reset --hard FETCH_HEAD
            popd
            cmake -G Ninja -S $REPO -B build \
              {% for name in dependencies %}
                {% set org, proj = name.split('/') %}
                -D{{proj}}_ROOT=$BASEDIR/{{name}}/installation \
              {% endfor %}
              {{ cmake_options|join(' ') }}
            cmake --build build
            ctest --test-dir build
